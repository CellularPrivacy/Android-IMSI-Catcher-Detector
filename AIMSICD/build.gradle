apply plugin: 'checkstyle'
apply plugin: 'com.android.application'

def gitSha = null
try {
    gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
} catch (Exception e) {
    logger.warn("git not available", e)
}

def isCi = "true".equals(System.getenv("CI"))
def isTravis = "true".equals(System.getenv("TRAVIS"))

def buildNumber = null
if(isTravis) {
    buildNumber = System.getenv("TRAVIS_BUILD_NUMBER")
} else {
    buildNumber = System.getenv("BUILDOZER_BUILDNUMBER")
}

version = '0.1.38-alpha'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 19 // Do not change: Working Icons on Android 5+
        versionCode 38
        testApplicationId "com.SecUpwN.AIMSICD.test"

        buildConfigField 'String', 'BUILD_NUMBER', (buildNumber == null ? 'null' : "\"${buildNumber}\"")
        buildConfigField 'String', 'GIT_SHA', (gitSha == null ? 'null' : "\"${gitSha}\"")
    }
    buildTypes {
        debug {
            try {
                buildConfigField 'String', 'OPEN_CELLID_API_KEY', '\"' + open_cellid_api_key + '\"'
            } catch (MissingPropertyException e) {
                buildConfigField 'String', 'OPEN_CELLID_API_KEY', '"NA"'
            }
            versionNameSuffix '-debug'
        }
        release {
            buildConfigField 'String', 'OPEN_CELLID_API_KEY', '"NA"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        warning 'MissingTranslation', 'InvalidPackage'
        abortOnError false

        xmlReport false
        htmlReport !isCi

        textReport isCi
        textOutput 'stdout'
    }
    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    productFlavors {
        system {
            versionName "$project.version-system"
        }
        normal {
            versionName "$project.version-normal"
        }
    }
}

dependencies {
    // DO NOT REMOVE BELOW COMMENTED-OUT CODE BEFORE ASKING!
    // Please group dependencies for better review like below.
    
    // Android Support Libraries
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    
    // OpenCSV (comma-separated values) parser library
    compile 'au.com.bytecode:opencsv:2.4'
    
    // Easy to use Root Shell for Android Applications
    compile 'com.github.Stericson:RootShell:d708ae1f0a'
    
    // SLF4J binding for the Android logger
    // https://github.com/lp0/slf4j-android
    compile 'eu.lp0.slf4j:slf4j-android:1.7.12-0'
    compile 'org.slf4j:slf4j-api:1.7.12'
    
    // Dependency Injection for Android
    compile 'io.freefair.android-injection:injection:1.0.0-rc2'
    compile 'io.freefair.android-injection:logging:1.0.0-rc2'
    compile 'io.freefair.android-injection:okhttp:1.0.0-rc2'

    // OSMBonusPack library to interact with OpenStreetMap data
    compile 'com.github.MKergall.osmbonuspack:OSMBonusPack:v5.6'
    
    // Transition library for animated transition effects
    compile 'com.github.kaichunlin.transition:core:0.9.2'
    
    // ShowcaseView library to highlight specific app elements
    //compile 'com.github.amlcurran.showcaseview:library:5.3.0'
}

check.dependsOn 'checkstyle'

task checkstyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'



    classpath = files()
}
